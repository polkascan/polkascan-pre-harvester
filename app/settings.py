#  Polkascan PRE Harvester
#
#  Copyright 2018-2020 openAware BV (NL).
#  This file is part of Polkascan.
#
#  Polkascan is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  Polkascan is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Polkascan. If not, see <http://www.gnu.org/licenses/>.
#
#  settings.py

import os

DB_NAME = os.environ.get("DB_NAME", "polkascan")
DB_HOST = os.environ.get("DB_HOST", "mysql")
DB_PORT = os.environ.get("DB_PORT", 3306)
DB_USERNAME = os.environ.get("DB_USERNAME", "root")
DB_PASSWORD = os.environ.get("DB_PASSWORD", "root")

DB_CONNECTION = os.environ.get("DB_CONNECTION", "mysql+mysqlconnector://{}:{}@{}:{}/{}".format(
    DB_USERNAME, DB_PASSWORD, DB_HOST, DB_PORT, DB_NAME
))

SUBSTRATE_RPC_URL = os.environ.get("SUBSTRATE_RPC_URL", "http://substrate-node:9933/")
SUBSTRATE_ADDRESS_TYPE = int(os.environ.get("SUBSTRATE_ADDRESS_TYPE", 42))

SUBSTRATE_TREASURY_ACCOUNTS = [
    "6d6f646c70792f74727372790000000000000000000000000000000000000000",
    "6d6f646c70792f736f6369650000000000000000000000000000000000000000"
]

# Simulate Scale encoded extrinsics per block for e.g. performance tests
# Example:
# SUBSTRATE_MOCK_EXTRINSICS = ["0xa50383ff76729e17ad31469debcb60f3ce3622f79143e442e77b58d6e2195d9ea998680d283c1715298aada424241284e4c3d2bec57a8b89e1bfa5502c0f84866cb94f64b666c04ceb88b7274612fea6bcdf7683701b96c13264d5326ecdcd5661df5502d500080008000f69590e7c83f3b71826537aff19ce9d173efeb887cca69c02b991f6ca75a8f43e05e5ef718a29d168e8df39367398cc60b9b45c7815fb2bfa362693a281676e1c7e66ad780b39e767f22efe0065929db7c69cef006d69a0ea8739c22fa1a06cf257d1cc14c340bdf2944ba8615b2a32cdc5774c9f93af6ef7eb3eab07caf94f00"] * 5000
SUBSTRATE_MOCK_EXTRINSICS = os.environ.get("SUBSTRATE_MOCK_EXTRINSICS", None)

TYPE_REGISTRY = os.environ.get("TYPE_REGISTRY", "default")
TYPE_REGISTRY_FILE = os.environ.get("TYPE_REGISTRY_FILE")

FINALIZATION_BY_BLOCK_CONFIRMATIONS = int(os.environ.get("FINALIZATION_BY_BLOCK_CONFIRMATIONS", 0))
FINALIZATION_ONLY = int(os.environ.get("FINALIZATION_ONLY", 0))

DEBUG = bool(os.environ.get("DEBUG", False))

BALANCE_FULL_SNAPSHOT_INTERVAL = 10000
QUERY_STORAGE_PAGE_SIZE = int(os.environ.get('QUERY_STORAGE_PAGE_SIZE', 1000))
CELERY_RUNNING = True


# Version compatibility switches

LEGACY_SESSION_VALIDATOR_LOOKUP = bool(os.environ.get("LEGACY_SESSION_VALIDATOR_LOOKUP", False))
SUBSTRATE_METADATA_VERSION = int(os.environ.get("SUBSTRATE_METADATA_VERSION", 8))
SUBSTRATE_STORAGE_BALANCE = os.environ.get("SUBSTRATE_STORAGE_BALANCE", "FreeBalance")
SUBSTRATE_STORAGE_INDICES = os.environ.get("SUBSTRATE_STORAGE_INDICES", "EnumSet")
NEW_SESSION_EVENT_HANDLER = bool(os.environ.get("NEW_SESSION_EVENT_HANDLER", False))
BALANCE_SYSTEM_ACCOUNT_MIN_BLOCK = int(os.environ.get("BALANCE_SYSTEM_ACCOUNT_MIN_BLOCK", 0))

# Constants

ACCOUNT_AUDIT_TYPE_NEW = 1
ACCOUNT_AUDIT_TYPE_REAPED = 2

ACCOUNT_INDEX_AUDIT_TYPE_NEW = 1
ACCOUNT_INDEX_AUDIT_TYPE_REAPED = 2

DEMOCRACY_PREIMAGE_AUDIT_TYPE_NOTED = 1
DEMOCRACY_PREIMAGE_AUDIT_TYPE_USED = 2
DEMOCRACY_PREIMAGE_AUDIT_TYPE_INVALID = 3
DEMOCRACY_PREIMAGE_AUDIT_TYPE_MISSING = 4
DEMOCRACY_PREIMAGE_AUDIT_TYPE_REAPED = 5

DEMOCRACY_PROPOSAL_AUDIT_TYPE_PROPOSED = 1
DEMOCRACY_PROPOSAL_AUDIT_TYPE_TABLED = 2

DEMOCRACY_REFERENDUM_AUDIT_TYPE_STARTED = 1
DEMOCRACY_REFERENDUM_AUDIT_TYPE_PASSED = 2
DEMOCRACY_REFERENDUM_AUDIT_TYPE_NOTPASSED = 3
DEMOCRACY_REFERENDUM_AUDIT_TYPE_CANCELLED = 4
DEMOCRACY_REFERENDUM_AUDIT_TYPE_EXECUTED = 5

DEMOCRACY_VOTE_AUDIT_TYPE_NORMAL = 1
DEMOCRACY_VOTE_AUDIT_TYPE_PROXY = 2


# Search indices
SEARCH_INDEX_SLASHED_ACCOUNT = 1
SEARCH_INDEX_BALANCETRANSFER = 2
SEARCH_INDEX_HEARTBEATRECEIVED = 3
SEARCH_INDEX_COUNCIL_PROPOSED = 4
SEARCH_INDEX_COUNCIL_VOTE = 5
SEARCH_INDEX_STAKING_BONDED = 6
SEARCH_INDEX_STAKING_UNBONDED = 7
SEARCH_INDEX_STAKING_WITHDRAWN = 8
SEARCH_INDEX_IMONLINE_SOMEOFFLINE = 9
SEARCH_INDEX_STAKING_NOMINATE = 10
SEARCH_INDEX_STAKING_VALIDATE = 11
SEARCH_INDEX_STAKING_CHILL = 12
SEARCH_INDEX_STAKING_SET_PAYEE = 19
SEARCH_INDEX_IDENTITY_SET = 13
SEARCH_INDEX_IDENTITY_SET_SUBS = 14
SEARCH_INDEX_IDENTITY_CLEARED = 15
SEARCH_INDEX_IDENTITY_KILLED = 16
SEARCH_INDEX_IDENTITY_JUDGEMENT_REQUESTED = 17
SEARCH_INDEX_IDENTITY_JUDGEMENT_GIVEN = 18
SEARCH_INDEX_IDENTITY_JUDGEMENT_UNREQUESTED = 20
SEARCH_INDEX_ACCOUNT_KILLED = 21
SEARCH_INDEX_ACCOUNT_CREATED = 22
SEARCH_INDEX_COUNCIL_MEMBER_ELECTED = 23
SEARCH_INDEX_COUNCIL_MEMBER_KICKED = 24
SEARCH_INDEX_COUNCIL_CANDIDACY_RENOUNCED = 25
SEARCH_INDEX_COUNCIL_CANDIDACY_SUBMIT = 26
SEARCH_INDEX_COUNCIL_CANDIDACY_VOTE = 27
SEARCH_INDEX_TREASURY_PROPOSED = 28
SEARCH_INDEX_TREASURY_AWARDED = 37
SEARCH_INDEX_DEMOCRACY_VOTE = 29
SEARCH_INDEX_DEMOCRACY_PROXY_VOTE = 30
SEARCH_INDEX_DEMOCRACY_PROPOSE = 31
SEARCH_INDEX_DEMOCRACY_SECOND = 32
SEARCH_INDEX_TECHCOMM_VOTED = 33
SEARCH_INDEX_TECHCOMM_PROPOSED = 34
SEARCH_INDEX_BALANCES_DEPOSIT = 35
SEARCH_INDEX_CLAIMS_CLAIMED = 36
SEARCH_INDEX_STAKING_SESSION = 38
SEARCH_INDEX_SIGNED_EXTRINSIC = 99

COUNCIL_MOTION_TYPE_PROPOSED = 1
COUNCIL_MOTION_TYPE_APPROVED = 2
COUNCIL_MOTION_TYPE_DISAPPROVED = 3
COUNCIL_MOTION_TYPE_EXECUTED = 4

TECHCOMM_PROPOSAL_TYPE_PROPOSED = 1
TECHCOMM_PROPOSAL_TYPE_APPROVED = 2
TECHCOMM_PROPOSAL_TYPE_DISAPPROVED = 3
TECHCOMM_PROPOSAL_TYPE_EXECUTED = 4

TREASURY_PROPOSAL_TYPE_PROPOSED = 1
TREASURY_PROPOSAL_TYPE_AWARDED = 2
TREASURY_PROPOSAL_TYPE_REJECTED = 3


IDENTITY_TYPE_SET = 1
IDENTITY_TYPE_CLEARED = 2
IDENTITY_TYPE_KILLED = 3
IDENTITY_TYPE_SET_SUBS = 4

IDENTITY_JUDGEMENT_TYPE_REQUESTED = 1
IDENTITY_JUDGEMENT_TYPE_UNREQUESTED = 2
IDENTITY_JUDGEMENT_TYPE_GIVEN = 3

IDENTITY_JUDGEMENT_VALUE_UNKNOWN = 0
IDENTITY_JUDGEMENT_VALUE_FEEPAID = 1
IDENTITY_JUDGEMENT_VALUE_REASONABLE = 2
IDENTITY_JUDGEMENT_VALUE_KNOWNGOOD = 3
IDENTITY_JUDGEMENT_VALUE_OUTOFDATE = 4
IDENTITY_JUDGEMENT_VALUE_LOWQUALITY = 5
IDENTITY_JUDGEMENT_VALUE_ERRONEOUS = 6

try:
    from app.local_settings import *
except ImportError:
    pass

VERSIONED_SETTINGS = {
    'kusama': [
        {
            "runtime_range": [1000, 1045],
            "settings": {
                "SUBSTRATE_STORAGE_BALANCE": "FreeBalance",
                "NEW_SESSION_EVENT_HANDLER": False
            }
        },
        {
            "runtime_range": [1050, None],
            "settings": {
                "SUBSTRATE_STORAGE_BALANCE": "Account",
                "NEW_SESSION_EVENT_HANDLER": True
            }
        }
    ]
}


def get_versioned_setting(setting, runtime_id):
    for versioning_item in VERSIONED_SETTINGS.get(TYPE_REGISTRY, []):
        if versioning_item['runtime_range'][0] <= int(runtime_id) and \
                (not versioning_item['runtime_range'][1] or versioning_item['runtime_range'][1] >= int(runtime_id)) and\
                setting in versioning_item['settings']:
            return versioning_item['settings'].get(setting)
    # Fallback to default settings
    return globals().get(setting)
